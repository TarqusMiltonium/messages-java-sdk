/*
 * MessagesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.messagemedia.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.messagemedia.api.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for Message type.
 */
public class Message {
    private String callbackUrl;
    private String content;
    private String destinationNumber;
    private Boolean deliveryReport;
    private List<FormatEnum> format;
    private List<String> media;
    private LocalDateTime messageExpiryTimestamp;
    private Object metadata;
    private LocalDateTime scheduled;
    private String sourceNumber;
    private SourceNumberTypeEnum sourceNumberType;

    /**
     * Default constructor.
     */
    public Message() {
        deliveryReport = false;
    }

    /**
     * Initialization constructor.
     * @param  content  String value for content.
     * @param  destinationNumber  String value for destinationNumber.
     * @param  callbackUrl  String value for callbackUrl.
     * @param  deliveryReport  Boolean value for deliveryReport.
     * @param  format  List of FormatEnum value for format.
     * @param  media  List of String value for media.
     * @param  messageExpiryTimestamp  LocalDateTime value for messageExpiryTimestamp.
     * @param  metadata  Object value for metadata.
     * @param  scheduled  LocalDateTime value for scheduled.
     * @param  sourceNumber  String value for sourceNumber.
     * @param  sourceNumberType  SourceNumberTypeEnum value for sourceNumberType.
     */
    public Message(
            String content,
            String destinationNumber,
            String callbackUrl,
            Boolean deliveryReport,
            List<FormatEnum> format,
            List<String> media,
            LocalDateTime messageExpiryTimestamp,
            Object metadata,
            LocalDateTime scheduled,
            String sourceNumber,
            SourceNumberTypeEnum sourceNumberType) {
        this.callbackUrl = callbackUrl;
        this.content = content;
        this.destinationNumber = destinationNumber;
        this.deliveryReport = deliveryReport;
        this.format = format;
        this.media = media;
        this.messageExpiryTimestamp = messageExpiryTimestamp;
        this.metadata = metadata;
        this.scheduled = scheduled;
        this.sourceNumber = sourceNumber;
        this.sourceNumberType = sourceNumberType;
    }

    /**
     * Getter for CallbackUrl.
     * URL replies and delivery reports to this message will be pushed to
     * @return Returns the String
     */
    @JsonGetter("callback_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCallbackUrl() {
        return callbackUrl;
    }

    /**
     * Setter for CallbackUrl.
     * URL replies and delivery reports to this message will be pushed to
     * @param callbackUrl Value for String
     */
    @JsonSetter("callback_url")
    public void setCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
    }

    /**
     * Getter for Content.
     * Content of the message
     * @return Returns the String
     */
    @JsonGetter("content")
    public String getContent() {
        return content;
    }

    /**
     * Setter for Content.
     * Content of the message
     * @param content Value for String
     */
    @JsonSetter("content")
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for DestinationNumber.
     * Destination number of the message
     * @return Returns the String
     */
    @JsonGetter("destination_number")
    public String getDestinationNumber() {
        return destinationNumber;
    }

    /**
     * Setter for DestinationNumber.
     * Destination number of the message
     * @param destinationNumber Value for String
     */
    @JsonSetter("destination_number")
    public void setDestinationNumber(String destinationNumber) {
        this.destinationNumber = destinationNumber;
    }

    /**
     * Getter for DeliveryReport.
     * Request a delivery report for this message
     * @return Returns the Boolean
     */
    @JsonGetter("delivery_report")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getDeliveryReport() {
        return deliveryReport;
    }

    /**
     * Setter for DeliveryReport.
     * Request a delivery report for this message
     * @param deliveryReport Value for Boolean
     */
    @JsonSetter("delivery_report")
    public void setDeliveryReport(Boolean deliveryReport) {
        this.deliveryReport = deliveryReport;
    }

    /**
     * Getter for Format.
     * Format of message, SMS, MMS or TTS (Text To Speech).
     * @return Returns the List of FormatEnum
     */
    @JsonGetter("format")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<FormatEnum> getFormat() {
        return format;
    }

    /**
     * Setter for Format.
     * Format of message, SMS, MMS or TTS (Text To Speech).
     * @param format Value for List of FormatEnum
     */
    @JsonSetter("format")
    public void setFormat(List<FormatEnum> format) {
        this.format = format;
    }

    /**
     * Getter for Media.
     * @return Returns the List of String
     */
    @JsonGetter("media")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getMedia() {
        return media;
    }

    /**
     * Setter for Media.
     * @param media Value for List of String
     */
    @JsonSetter("media")
    public void setMedia(List<String> media) {
        this.media = media;
    }

    /**
     * Getter for MessageExpiryTimestamp.
     * Date time after which the message expires and will not be sent
     * @return Returns the LocalDateTime
     */
    @JsonGetter("message_expiry_timestamp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getMessageExpiryTimestamp() {
        return messageExpiryTimestamp;
    }

    /**
     * Setter for MessageExpiryTimestamp.
     * Date time after which the message expires and will not be sent
     * @param messageExpiryTimestamp Value for LocalDateTime
     */
    @JsonSetter("message_expiry_timestamp")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setMessageExpiryTimestamp(LocalDateTime messageExpiryTimestamp) {
        this.messageExpiryTimestamp = messageExpiryTimestamp;
    }

    /**
     * Getter for Metadata.
     * Metadata for the message specified as a set of key value pairs, each key can be up to 100
     * characters long and each value can be up to 256 characters long ``` { "myKey": "myValue",
     * "anotherKey": "anotherValue" } ```
     * @return Returns the Object
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Metadata for the message specified as a set of key value pairs, each key can be up to 100
     * characters long and each value can be up to 256 characters long ``` { "myKey": "myValue",
     * "anotherKey": "anotherValue" } ```
     * @param metadata Value for Object
     */
    @JsonSetter("metadata")
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for Scheduled.
     * Scheduled delivery date time of the message
     * @return Returns the LocalDateTime
     */
    @JsonGetter("scheduled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getScheduled() {
        return scheduled;
    }

    /**
     * Setter for Scheduled.
     * Scheduled delivery date time of the message
     * @param scheduled Value for LocalDateTime
     */
    @JsonSetter("scheduled")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setScheduled(LocalDateTime scheduled) {
        this.scheduled = scheduled;
    }

    /**
     * Getter for SourceNumber.
     * @return Returns the String
     */
    @JsonGetter("source_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSourceNumber() {
        return sourceNumber;
    }

    /**
     * Setter for SourceNumber.
     * @param sourceNumber Value for String
     */
    @JsonSetter("source_number")
    public void setSourceNumber(String sourceNumber) {
        this.sourceNumber = sourceNumber;
    }

    /**
     * Getter for SourceNumberType.
     * Type of source address specified, this can be INTERNATIONAL, ALPHANUMERIC or SHORTCODE
     * @return Returns the SourceNumberTypeEnum
     */
    @JsonGetter("source_number_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SourceNumberTypeEnum getSourceNumberType() {
        return sourceNumberType;
    }

    /**
     * Setter for SourceNumberType.
     * Type of source address specified, this can be INTERNATIONAL, ALPHANUMERIC or SHORTCODE
     * @param sourceNumberType Value for SourceNumberTypeEnum
     */
    @JsonSetter("source_number_type")
    public void setSourceNumberType(SourceNumberTypeEnum sourceNumberType) {
        this.sourceNumberType = sourceNumberType;
    }

    /**
     * Converts this Message into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Message [" + "content=" + content + ", destinationNumber=" + destinationNumber
                + ", callbackUrl=" + callbackUrl + ", deliveryReport=" + deliveryReport
                + ", format=" + format + ", media=" + media + ", messageExpiryTimestamp="
                + messageExpiryTimestamp + ", metadata=" + metadata + ", scheduled=" + scheduled
                + ", sourceNumber=" + sourceNumber + ", sourceNumberType=" + sourceNumberType + "]";
    }

    /**
     * Builds a new {@link Message.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Message.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(content, destinationNumber)
                .callbackUrl(getCallbackUrl())
                .deliveryReport(getDeliveryReport())
                .format(getFormat())
                .media(getMedia())
                .messageExpiryTimestamp(getMessageExpiryTimestamp())
                .metadata(getMetadata())
                .scheduled(getScheduled())
                .sourceNumber(getSourceNumber())
                .sourceNumberType(getSourceNumberType());
        return builder;
    }

    /**
     * Class to build instances of {@link Message}.
     */
    public static class Builder {
        private String content;
        private String destinationNumber;
        private String callbackUrl;
        private Boolean deliveryReport = false;
        private List<FormatEnum> format;
        private List<String> media;
        private LocalDateTime messageExpiryTimestamp;
        private Object metadata;
        private LocalDateTime scheduled;
        private String sourceNumber;
        private SourceNumberTypeEnum sourceNumberType;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  content  String value for content.
         * @param  destinationNumber  String value for destinationNumber.
         */
        public Builder(String content, String destinationNumber) {
            this.content = content;
            this.destinationNumber = destinationNumber;
        }

        /**
         * Setter for content.
         * @param  content  String value for content.
         * @return Builder
         */
        public Builder content(String content) {
            this.content = content;
            return this;
        }

        /**
         * Setter for destinationNumber.
         * @param  destinationNumber  String value for destinationNumber.
         * @return Builder
         */
        public Builder destinationNumber(String destinationNumber) {
            this.destinationNumber = destinationNumber;
            return this;
        }

        /**
         * Setter for callbackUrl.
         * @param  callbackUrl  String value for callbackUrl.
         * @return Builder
         */
        public Builder callbackUrl(String callbackUrl) {
            this.callbackUrl = callbackUrl;
            return this;
        }

        /**
         * Setter for deliveryReport.
         * @param  deliveryReport  Boolean value for deliveryReport.
         * @return Builder
         */
        public Builder deliveryReport(Boolean deliveryReport) {
            this.deliveryReport = deliveryReport;
            return this;
        }

        /**
         * Setter for format.
         * @param  format  List of FormatEnum value for format.
         * @return Builder
         */
        public Builder format(List<FormatEnum> format) {
            this.format = format;
            return this;
        }

        /**
         * Setter for media.
         * @param  media  List of String value for media.
         * @return Builder
         */
        public Builder media(List<String> media) {
            this.media = media;
            return this;
        }

        /**
         * Setter for messageExpiryTimestamp.
         * @param  messageExpiryTimestamp  LocalDateTime value for messageExpiryTimestamp.
         * @return Builder
         */
        public Builder messageExpiryTimestamp(LocalDateTime messageExpiryTimestamp) {
            this.messageExpiryTimestamp = messageExpiryTimestamp;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Object value for metadata.
         * @return Builder
         */
        public Builder metadata(Object metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for scheduled.
         * @param  scheduled  LocalDateTime value for scheduled.
         * @return Builder
         */
        public Builder scheduled(LocalDateTime scheduled) {
            this.scheduled = scheduled;
            return this;
        }

        /**
         * Setter for sourceNumber.
         * @param  sourceNumber  String value for sourceNumber.
         * @return Builder
         */
        public Builder sourceNumber(String sourceNumber) {
            this.sourceNumber = sourceNumber;
            return this;
        }

        /**
         * Setter for sourceNumberType.
         * @param  sourceNumberType  SourceNumberTypeEnum value for sourceNumberType.
         * @return Builder
         */
        public Builder sourceNumberType(SourceNumberTypeEnum sourceNumberType) {
            this.sourceNumberType = sourceNumberType;
            return this;
        }

        /**
         * Builds a new {@link Message} object using the set fields.
         * @return {@link Message}
         */
        public Message build() {
            return new Message(content, destinationNumber, callbackUrl, deliveryReport, format,
                    media, messageExpiryTimestamp, metadata, scheduled, sourceNumber,
                    sourceNumberType);
        }
    }
}
