/*
 * MessagesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.messagemedia.api.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.messagemedia.api.MessagesClient;
import com.messagemedia.api.exceptions.ApiException;
import com.messagemedia.api.models.CheckDeliveryReportsResponse;
import com.messagemedia.api.testing.TestHelper;
import java.util.LinkedHashMap;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class DeliveryReportsControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static MessagesClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static DeliveryReportsController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getDeliveryReportsController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Check for any delivery reports that have been received. Delivery reports are a notification
     * of the change in status of a message as it is being processed. Each request to the check
     * delivery reports endpoint will return any delivery reports received that have not yet been
     * confirmed using the confirm delivery reports endpoint. A response from the check delivery
     * reports endpoint will have the following structure: ```json { "delivery_reports": [ {
     * "callback_url": "https://my.callback.url.com", "delivery_report_id":
     * "01e1fa0a-6e27-4945-9cdb-18644b4de043", "source_number": "+61491570157", "date_received":
     * "2017-05-20T06:30:37.642Z", "status": "enroute", "delay": 0, "submitted_date":
     * "2017-05-20T06:30:37.639Z", "original_text": "My first message!", "message_id":
     * "d781dcab-d9d8-4fb2-9e03-872f07ae94ba", "vendor_account_id": { "vendor_id": "MessageMedia",
     * "account_id": "MyAccount" }, "metadata": { "key1": "value1", "key2": "value2" } }, {
     * "callback_url": "https://my.callback.url.com", "delivery_report_id":
     * "0edf9022-7ccc-43e6-acab-480e93e98c1b", "source_number": "+61491570158", "date_received":
     * "2017-05-21T01:46:42.579Z", "status": "enroute", "delay": 0, "submitted_date":
     * "2017-05-21T01:46:42.574Z", "original_text": "My second message!", "message_id":
     * "fbb3b3f5-b702-4d8b-ab44-65b2ee39a281", "vendor_account_id": { "vendor_id": "MessageMedia",
     * "account_id": "MyAccount" }, "metadata": { "key1": "value1", "key2": "value2" } } ] } ```
     * Each delivery report will contain details about the message, including any metadata specified
     * and the new status of the message (as each delivery report indicates a change in status of a
     * message) and the timestamp at which the status changed. Every delivery report will have a
     * unique delivery report ID for use with the confirm delivery reports endpoint. *Note: The
     * source number and destination number properties in a delivery report are the inverse of those
     * specified in the message that the delivery report relates to. The source number of the
     * delivery report is the destination number of the original message.* Subsequent requests to
     * the check delivery reports endpoint will return the same delivery reports and a maximum of
     * 100 delivery reports will be returned in each request. Applications should use the confirm
     * delivery reports endpoint in the following pattern so that delivery reports that have been
     * processed are no longer returned in subsequent check delivery reports requests. 1. Call check
     * delivery reports endpoint 2. Process each delivery report 3. Confirm all processed delivery
     * reports using the confirm delivery reports endpoint *Note: It is recommended to use the
     * Webhooks feature to receive reply messages rather than polling the check delivery reports
     * endpoint.*.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testCheckDeliveryReports1() throws Exception {

        // Set callback and perform API call
        CheckDeliveryReportsResponse result = null;
        try {
            result = controller.getCheckDeliveryReports();
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", TestHelper.nullString);
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertEquals("Response body does not match exactly",
                "{    \"delivery_reports\": [        {            \"callback_url\": \"https://my.ca"
                + "llback.url.com\",            \"delivery_report_id\": \"01e1fa0a-6e27-4945-9cdb-1"
                + "8644b4de043\",            \"source_number\": \"+61491570157\",            \"date"
                + "_received\": \"2017-05-20T06:30:37.642Z\",            \"status\": \"enroute\",  "
                + "          \"delay\": 0,            \"submitted_date\": \"2017-05-20T06:30:37.639"
                + "Z\",            \"original_text\": \"My first message!\",            \"message_i"
                + "d\": \"d781dcab-d9d8-4fb2-9e03-872f07ae94ba\",            \"vendor_account_id\":"
                + " {                \"vendor_id\": \"MessageMedia\",                \"account_id"
                + "\": \"MyAccount\"            },            \"metadata\": {                \"key1"
                + "\": \"value1\",                \"key2\": \"value2\"            }        },      "
                + "  {            \"callback_url\": \"https://my.callback.url.com\",            \"d"
                + "elivery_report_id\": \"0edf9022-7ccc-43e6-acab-480e93e98c1b\",            \"sour"
                + "ce_number\": \"+61491570158\",            \"date_received\": \"2017-05-21T01:46:"
                + "42.579Z\",            \"status\": \"enroute\",            \"delay\": 0,         "
                + "   \"submitted_date\": \"2017-05-21T01:46:42.574Z\",            \"original_text"
                + "\": \"My second message!\",            \"message_id\": \"fbb3b3f5-b702-4d8b-ab44"
                + "-65b2ee39a281\",            \"vendor_account_id\": {                \"vendor_id"
                + "\": \"MessageMedia\",                \"account_id\": \"MyAccount\"            },"
                + "            \"metadata\": {                \"key1\": \"value1\",                "
                + "\"key2\": \"value2\"            }        }    ]}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()));
    }

}
